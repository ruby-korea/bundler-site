%h2 Bundler.setup

.contents
  .bullet
    .description
      로드 경로를 설정해 Gemfile의 모든 의존성을
      require할 수 있게 하기
    :code
      # lang: ruby
      require 'rubygems'
      require 'bundler/setup'
      require 'nokogiri'

  .bullet
    .description
      로드 경로에 특정 그룹의 gem만을 추가합니다.
      기본 그룹의 gem도 넣고 싶다면, 포함시킬 필요가
      있습니다.
    :code
      # lang: ruby
      require 'rubygems'
      require 'bundler'
      Bundler.setup(:default, :ci)
      require 'nokogiri'
    = link_to '자세한 내용은: 그룹', './groups.html'

%h2 호환성

.contents
  .bullet
    .description
      루비 2.0과 RubyGems 2.0 둘 다 번들러 1.3 이후의 버전이 필요합니다. 번들러와 시스템의 호환성이 궁금하시다면, 호환성 목록을 확인하세요.
      = link_to '자세한 내용은: 호환성', '/compatibility.html'

  %h2#setting-up-your-application-to-use-bundler
    번들러를 사용해 애플리케이션 설정하기

  .bullet
    .description
      번들러는 루비가 <code>Gemfile</code> 안의 모든 gem(과 거기에 의존하는 모든 gem)을 찾을
      수 있는지 확인합니다. 애플리케이션이 레일스 3 애플리케이션이라면 번들러를 호출하기 위한
      코드가 기본으로 포함되어 있습니다. 레일스 2.3 애플리케이션이라면 다음 링크를 확인하세요.
      <a href="./rails23.html">번들러를 레일스 2.3과 사용하기</a>

  .bullet
    .description
      시나트라 같은 다른 종류의 애플리케이션에선 gem을 require하기 전에 번들러를 설정할 필요가
      있습니다. 애플리케이션에서 처음 로드되는 파일(시나트라에서는 <code>require
      'sinatra'</code>를 호출하는 파일)의 제일 윗부분에 다음 코드를 넣으세요.

    :code
      # lang: ruby
      require 'rubygems'
      require 'bundler/setup'

  .bullet
    .description
      이렇게 하면 <code>Gemfile</code>을 찾아, <code>Gemfile</code>의 모든 gem을 루비에서
      사용가능하게 만들어 줍니다.(기술적인 관점에서 보면 로드 경로에 gem을 넣어 줍니다.)
      <code>require 'rubygems'</code>에 추가적인 기능을 부여한다고 생각하셔도 됩니다.

  .bullet
    .description
      이제 코드가 루비에서 사용가능하므로, 필요한 gem을 require 할 수 있습니다. 예를 들어
      <code>require 'sinatra'</code>를 할 수 있습니다. 많은 의존성을 가지고 있다면
      "<code>Gemfile</code> 안의 모든 의존성을 require"하고 싶을 수도 있습니다. 이렇게 하려면
      <code>require 'bundler/setup'</code>을 넣으시면 됩니다.

    :code
      # lang: ruby
      Bundler.require(:default)

    예제 Gemfile대로라면, 이 라인은 다음 코드들을 실행한 것과 동일한 결과를 얻습니다.

    :code
      # lang: ruby
      require 'rails'
      require 'rack-cache'
      require 'nokogiri'

  .bullet
    .description
      눈치 빠른 분들은 <code>rack-cache</code> gem을 require하는 바른 방법은 <code>require
      'rack-cache'</code>가 아니라 <code>require 'rack/cache'</code>인 것을 눈치채셨을
      것입니다. 번들러가 <code>require 'rack/cache'</code>를 사용하도록 하려면 Gemfile을
      고치세요.

    :code
      # lang: ruby
      source 'https://rubygems.org'

      gem 'rails', '3.0.0.rc'
      gem 'rack-cache', :require => 'rack/cache'
      gem 'nokogiri', '~> 1.4.2'

  .bullet
    .description
      작은 <code>Gemfile</code>은 <code>Bundler.require</code>를 사용하지 않고 직접 require
      하는 걸 추천합니다.(<code>Gemfile</code> 안에 <code>:require</code>를 넣어야 한다면 더더욱)
      큰 <code>Gemfile</code>은 <code>Bundler.require</code>해서 많은 요구사항을 반복적으로
      입력하지 않을 수 있습니다.
